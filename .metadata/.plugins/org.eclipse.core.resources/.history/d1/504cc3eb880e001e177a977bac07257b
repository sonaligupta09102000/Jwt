package com.onerivet.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.onerivet.model.payload.AuthRequest;
import com.onerivet.model.payload.UsersDto;
import com.onerivet.model.response.GenericResponse;
import com.onerivet.service.UsersService;

@RestController
@RequestMapping("/users")
public class UsersController {

	@Autowired
	private UsersService usersService;
	
	@Autowired
	private AuthRequest authRequest;

	@PostMapping("/add-users")
	public GenericResponse<String> addUsers(@RequestBody UsersDto usersDto) {
		GenericResponse<String> genericResponse = new GenericResponse<>(this.usersService.addAllUsers(usersDto), null);
		return genericResponse;
	}

	@GetMapping("/get-all-users")
	public GenericResponse<List<UsersDto>> getAll() {
		GenericResponse<List<UsersDto>> genericResponse=new GenericResponse<>(this.usersService.getAllusers(),null);
		return genericResponse;
	}

	@GetMapping("/get-by-id/{id}")
	public GenericResponse<UsersDto> getById(@PathVariable int id) {
		GenericResponse<UsersDto> genericResponse = new GenericResponse<>(this.usersService.getUsersById(id), null);
		return genericResponse;

	}

	@PutMapping("/update-users/{id}")
	public GenericResponse<String> updateUsers(@RequestBody UsersDto usersDto, @PathVariable int id) {
		GenericResponse<String> genericResponse = new GenericResponse<>(this.usersService.updateUsersById(usersDto, id),
				null);
		return genericResponse;
	}

	@DeleteMapping("/delete-user")
	public GenericResponse<String> deleteUsers() {
		GenericResponse<String> genericResponse=new GenericResponse<>(this.usersService.deleteAll(),null);
		return genericResponse;
	}
	
	@PostMapping("/authenticate")
	public GenericResponse<String> authenticateAndGetToken(@RequestBody AuthRequest authRequest)
	{
		GenericResponse<String> genericResponse=new GenericResponse<>();
		return genericResponse;
	}

}
